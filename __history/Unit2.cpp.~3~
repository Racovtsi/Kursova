//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit1.h"
#include "Unit2.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm2 *Form2;
int difference_x,difference_y;
//---------------------------------------------------------------------------
__fastcall TForm2::TForm2(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------

void __fastcall TForm2::Button1Click(TObject *Sender)
{
Form2->Close();
Form1->Visible = true;
}
//---------------------------------------------------------------------------
void __fastcall TForm2::FormClose(TObject *Sender, TCloseAction &Action)
{
Form1->Close();
}
//---------------------------------------------------------------------------
void __fastcall TForm2::Image1MouseDown(TObject *Sender, TMouseButton Button, TShiftState Shift,
          int X, int Y)
{
difference_x = Form2->Image1->Left-Mouse->CursorPos.x;
difference_y = Form2->Image1->Top-Mouse->CursorPos.y;
Timer1->Enabled=true;

}
//---------------------------------------------------------------------------

void __fastcall TForm2::Timer1Timer(TObject *Sender)
{
int xxx = Mouse->CursorPos.x +difference_x ;
int yyy = Mouse->CursorPos.y +difference_y;

Image1->Top=yyy;
Image1->Left=xxx;
}
//---------------------------------------------------------------------------

void __fastcall TForm2::Image1MouseUp(TObject *Sender, TMouseButton Button, TShiftState Shift,
          int X, int Y)
{
Timer1->Enabled=false;
}
//---------------------------------------------------------------------------

